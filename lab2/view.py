from PyQt6.QtWidgets import (
    QMainWindow, QTableWidget, QTableWidgetItem,
    QTreeWidget, QTreeWidgetItem, QPushButton,
    QMessageBox, QMenu, QDialog, QVBoxLayout, QWidget,
    QLabel, QHeaderView, QHBoxLayout
)
from PyQt6.QtCore import Qt
from dialogs import AddRecordDialog, SearchDeleteDialog


class TournamentView(QMainWindow):
    def __init__(self, controller):
        super().__init__()
        self.controller = controller
        self.setWindowTitle("–ú–µ–Ω–µ–¥–∂–µ—Ä —Ç—É—Ä–Ω–∏—Ä–æ–≤")
        self.setGeometry(100, 100, 1000, 700)
        self.init_ui()
        self.controller.load_data()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ

    def init_ui(self):
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        main_layout = QVBoxLayout()
        central_widget.setLayout(main_layout)

        # –í–∏–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Ç–∞–±–ª–∏—Ü–∞/–¥–µ—Ä–µ–≤–æ)
        self.view_toggle = QPushButton("–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ")
        self.view_toggle.clicked.connect(self.toggle_view)
        main_layout.addWidget(self.view_toggle)

        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.table = QTableWidget()
        self.table.setColumnCount(6)
        self.table.setHorizontalHeaderLabels([
            "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞", "–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è", "–í–∏–¥ —Å–ø–æ—Ä—Ç–∞",
            "–§–ò–û –ø–æ–±–µ–¥–∏—Ç–µ–ª—è", "–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ ($)", "–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è ($)"
        ])
        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)
        main_layout.addWidget(self.table)

        # –î–µ—Ä–µ–≤–æ –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.tree = QTreeWidget()
        self.tree.setHeaderLabels(["–ü–∞—Ä–∞–º–µ—Ç—Ä", "–ó–Ω–∞—á–µ–Ω–∏–µ"])
        self.tree.setColumnCount(2)
        self.tree.hide()
        main_layout.addWidget(self.tree)

        # –ü–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫
        button_layout = QHBoxLayout()

        self.load_btn = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        self.load_btn.clicked.connect(self.controller.load_data)
        button_layout.addWidget(self.load_btn)

        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")
        self.add_btn.clicked.connect(self.show_add_dialog)
        button_layout.addWidget(self.add_btn)

        self.search_delete_btn = QPushButton("–ü–æ–∏—Å–∫/–£–¥–∞–ª–µ–Ω–∏–µ")
        self.search_delete_btn.clicked.connect(self.show_search_delete_menu)
        button_layout.addWidget(self.search_delete_btn)

        main_layout.addLayout(button_layout)

    def update_table(self, records):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ"""
        self.table.setRowCount(len(records))
        for row, record in enumerate(records):
            self.table.setItem(row, 0, QTableWidgetItem(record['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞']))
            self.table.setItem(row, 1, QTableWidgetItem(record['–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è']))
            self.table.setItem(row, 2, QTableWidgetItem(record['–í–∏–¥ —Å–ø–æ—Ä—Ç–∞']))
            self.table.setItem(row, 3, QTableWidgetItem(record['–§–ò–û –ø–æ–±–µ–¥–∏—Ç–µ–ª—è']))
            self.table.setItem(row, 4, QTableWidgetItem(f"{float(record['–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥']):,.2f}"))
            self.table.setItem(row, 5, QTableWidgetItem(f"{float(record['–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è']):,.2f}"))

    def update_tree(self, records):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –¥–µ—Ä–µ–≤–µ"""
        self.tree.clear()
        for record in records:
            tournament_item = QTreeWidgetItem(self.tree)
            tournament_item.setText(0, record['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞'])

            details = [
                ("–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è", record['–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è']),
                ("–í–∏–¥ —Å–ø–æ—Ä—Ç–∞", record['–í–∏–¥ —Å–ø–æ—Ä—Ç–∞']),
                ("–ü–æ–±–µ–¥–∏—Ç–µ–ª—å", record['–§–ò–û –ø–æ–±–µ–¥–∏—Ç–µ–ª—è']),
                ("–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥", f"{float(record['–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥']):,.2f} $"),
                ("–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è", f"{float(record['–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è']):,.2f} $")
            ]

            for param, value in details:
                item = QTreeWidgetItem(tournament_item)
                item.setText(0, param)
                item.setText(1, value)

    def toggle_view(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–µ–π –∏ –¥–µ—Ä–µ–≤–æ–º"""
        if self.table.isVisible():
            self.table.hide()
            self.tree.show()
            self.view_toggle.setText("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É")
        else:
            self.tree.hide()
            self.table.show()
            self.view_toggle.setText("–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ")

    def show_add_dialog(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
        dialog = AddRecordDialog(self)
        if dialog.exec():
            self.controller.add_record_to_db(dialog.get_record())

    def show_search_delete_menu(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è"""
        menu = QMenu(self)

        search_action = menu.addAction("üîç –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π")
        search_action.triggered.connect(self.show_search_dialog)

        delete_action = menu.addAction("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å–∏")
        delete_action.triggered.connect(self.show_delete_dialog)

        menu.exec(self.search_delete_btn.mapToGlobal(self.search_delete_btn.rect().bottomLeft()))

    def show_search_dialog(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–∏—Å–∫–∞ —Å —Ç—Ä–µ–º—è —Ç–∏–ø–∞–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤"""
        sports = self.controller.get_sports_list()
        dialog = SearchDeleteDialog(sports, is_delete_mode=False, parent=self)

        if dialog.exec():
            conditions = dialog.get_conditions()
            results = self.controller.search_records(conditions)
            self.show_search_results(results)

    def show_delete_dialog(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —É–¥–∞–ª–µ–Ω–∏—è —Å —Ç—Ä–µ–º—è —Ç–∏–ø–∞–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤"""
        sports = self.controller.get_sports_list()
        dialog = SearchDeleteDialog(sports, is_delete_mode=True, parent=self)

        if dialog.exec():
            confirm = QMessageBox.question(
                self,
                "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º?",
                QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
            )

            if confirm == QMessageBox.StandardButton.Yes:
                deleted_count = self.controller.delete_records(dialog.get_conditions())
                QMessageBox.information(
                    self,
                    "–†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è",
                    f"–£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {deleted_count}",
                    QMessageBox.StandardButton.Ok
                )
                self.controller.load_data()

    def show_search_results(self, results):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ"""
        if not results:
            QMessageBox.information(self, "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞", "–ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return

        result_dialog = QDialog(self)
        result_dialog.setWindowTitle(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ ({len(results)} –∑–∞–ø–∏—Å–µ–π)")
        result_dialog.resize(900, 500)

        layout = QVBoxLayout()

        # –¢–∞–±–ª–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        result_table = QTableWidget()
        result_table.setColumnCount(6)
        result_table.setHorizontalHeaderLabels([
            "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞", "–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è", "–í–∏–¥ —Å–ø–æ—Ä—Ç–∞",
            "–§–ò–û –ø–æ–±–µ–¥–∏—Ç–µ–ª—è", "–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ ($)", "–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è ($)"
        ])
        result_table.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)

        result_table.setRowCount(len(results))
        for row, record in enumerate(results):
            result_table.setItem(row, 0, QTableWidgetItem(record['–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞']))
            result_table.setItem(row, 1, QTableWidgetItem(record['–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è']))
            result_table.setItem(row, 2, QTableWidgetItem(record['–í–∏–¥ —Å–ø–æ—Ä—Ç–∞']))
            result_table.setItem(row, 3, QTableWidgetItem(record['–§–ò–û –ø–æ–±–µ–¥–∏—Ç–µ–ª—è']))
            result_table.setItem(row, 4, QTableWidgetItem(f"{float(record['–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥']):,.2f}"))
            result_table.setItem(row, 5, QTableWidgetItem(f"{float(record['–ó–∞—Ä–∞–±–æ—Ç–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è']):,.2f}"))

        layout.addWidget(result_table)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_btn = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        close_btn.clicked.connect(result_dialog.accept)
        layout.addWidget(close_btn)

        result_dialog.setLayout(layout)
        result_dialog.exec()